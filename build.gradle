import grails.util.Environment


buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.4"
    }
}

plugins {
    id 'war'
}



version "5.0-SNAPSHOT"
group "au.org.ala"

apply plugin:'java'
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"



repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://nexus.ala.org.au/content/repositories/releases/" }
    maven { url "https://nexus.ala.org.au/service/local/repositories/grails3-plugins/content/" }

}

def tomcatVersion = '7.0.55.2'
def metadataExtractorVersion = "2.6.2"
def imgscalrVersion = "4.2"
def httpmimeVersion = "4.2.1"
def jtsVersion = "1.8"
def geoToolsVersion = "11.1"


dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
    //runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile "com.drewnoakes:metadata-extractor:${metadataExtractorVersion}"
    compile "org.imgscalr:imgscalr-lib:${imgscalrVersion}"
    compile "org.apache.httpcomponents:httpmime:${httpmimeVersion}"
    compile "com.vividsolutions:jts:${jtsVersion}"
    compile "org.geotools.xsd:gt-xsd-kml:${geoToolsVersion}"
    compile "joda-time:joda-time:2.3"
    compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    compile "org.apache.httpcomponents:httpcore:4.4.1"
    compile "org.apache.httpcomponents:httpclient:4.4.1"

    testCompile "org.grails:grails-test-mixins:3.3.0"
    testRuntime 'com.github.detro:phantomjsdriver:1.2.0'

    //JSON converter
    compile 'org.grails.plugins:converters'
    runtime 'org.webjars:jquery:1.12.4'
    //mimic grails.config.locations like in Grails 2.x
    compile 'org.grails.plugins:external-config:2.0.0.RC1'
    compile "org.grails.plugins:excel-import:3.0.0"
    compile "org.grails.plugins:excel-export:0.2.1"
    compile 'org.grails.plugins:grails-google-visualization:2.2.1'
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
    compile 'org.grails.plugins:mail:2.0.0.RC6'


    compile 'org.grails.plugins:grails-markdown:3.0.0'
    compile 'org.grails.plugins:grails-cookie:2.0.3'

    compile 'org.grails.plugins:cache:5.0.0.RC1'
    compile 'org.grails.plugins:grails-google-visualization:2.2.1'

    //ALA plugins
    //TODO Same namespace?
    compile "au.org.ala.plugins.grails:images-client-plugin:0.9-SNAPSHOT"
    compile "org.grails.plugins:ala-auth:3.1.0"
    runtime "org.grails.plugins:ala-bootstrap3:3.0.4"
    compile "org.grails.plugins:ala-admin-plugin:2.1"
    compile "org.grails.plugins:ala-map-plugin:3.0-SNAPSHOT"
    compile "ecodata.client.plugin:ecodata-client-plugin:3.0-SNAPSHOT"
}


bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

bootRepackage {
    enabled = true
    executable = true
    classifier = 'exec'
}

assets {
    minifyJs = true
    minifyCss = true

}
